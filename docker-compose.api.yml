version: "3.9"

services:
  bootstrap:
    image: postgres:16
    container_name: market_bootstrap
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    volumes:
      - ./db/bootstrap.sql:/docker-entrypoint-initdb.d/bootstrap.sql:ro
    command: [
      "psql",
      "postgresql://app_user:${POSTGRES_PASSWORD}@db:5432/app_db",
      "-v", "ON_ERROR_STOP=1",
      "-f", "/docker-entrypoint-initdb.d/bootstrap.sql"
    ]
    restart: "no"

  api:
    build:
      context: .
    image: backend-api:latest
    container_name: market_api
    env_file: .env
    depends_on:
      bootstrap:
        condition: service_completed_successfully
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_started
    ports:
      - "8000:8000"

  worker:
    build:
      context: .
    image: backend-worker:latest
    container_name: market_worker
    command: celery -A app.workers.celery_app.celery_app worker -l info
    env_file: .env
    user: "1000:1000"
    depends_on:
      bootstrap:
        condition: service_completed_successfully
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_started

  beat:
    build:
      context: .
    image: backend-beat:latest
    container_name: market_beat
    command: celery -A app.workers.celery_app.celery_app beat -l info
    env_file: .env
    user: "1000:1000"
    depends_on:
      bootstrap:
        condition: service_completed_successfully
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_started
      worker:
        condition: service_started
